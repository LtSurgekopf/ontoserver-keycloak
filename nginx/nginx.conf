events { worker_connections 1024; }

error_log  stderr info;

http {

  server {  
    listen 80;
    listen [::]:80;
    server_name athena.local;

    access_log  /dev/stdout;
    
    client_max_body_size 600M;

    include ssl.conf;

    # enforce HSTS, this may make debugging harder and is not active during testing!
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # resolve relative file names (index.html) from this dir
    root /usr/share/nginx/html;
    # handle index.html, bypassing Ontoserver
    location /index.html {
      try_files index.html =404;
      # if the file is missing, serve a 404.
    }

    # pass keycloak to keycloak container
    location /keycloak/ {
      proxy_pass          http://keycloak:8080/;
      proxy_set_header    Host               $host;
      proxy_set_header    X-Real-IP          $remote_addr;
      proxy_set_header    X-Forwarded-For    $proxy_add_x_forwarded_for;
      proxy_set_header    X-Forwarded-Host   $host;
      proxy_set_header    X-Forwarded-Server $host;
      proxy_set_header    X-Forwarded-Port   $server_port;
      proxy_set_header    X-Forwarded-Proto  $scheme;
    }

    # redirect auth seperately (http://<server>/keycloak will redirect to /auth)
    location /auth/ {
      proxy_pass          http://keycloak:8080/auth/;
      proxy_set_header    Host               $host;
      proxy_set_header    X-Real-IP          $remote_addr;
      proxy_set_header    X-Forwarded-For    $proxy_add_x_forwarded_for;
      proxy_set_header    X-Forwarded-Host   $host;
      proxy_set_header    X-Forwarded-Server $host;
      proxy_set_header    X-Forwarded-Port   $server_port;
      proxy_set_header    X-Forwarded-Proto  $scheme;
    }

    # everything else (notably: /fhir/, /css/ and /js/) will be handled by Ontoserver
    location / {
      proxy_http_version    1.1;
      proxy_pass            http://ontoserver:8080/;
      proxy_set_header      Host $host;
      proxy_read_timeout    300s;
      include cors_support; 
    }
  }
}
